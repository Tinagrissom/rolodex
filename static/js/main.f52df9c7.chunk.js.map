{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-bar/search-bar.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","contact","name","phone","email","CardList","console","log","contacts","map","id","SearchBar","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredContacts","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAIaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UAEE,mCAAMD,EAAME,QAAQC,QACpB,4BAAIH,EAAME,QAAQE,QAClB,4BAAIJ,EAAME,QAAQG,YCHTC,G,MAAW,SAACN,GAEvB,OADAO,QAAQC,IAAIR,GAEV,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACR,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQS,WCPdC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCyCCG,G,wDA1Cb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAO/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YAKZU,EAAmBrB,EAASsB,QAAO,SAAC7B,GAAD,OACvCA,EAAQC,KAAK6B,cAAcC,SAASb,EAAYc,wBAGlD,OACE,sBAAKjC,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,8BACA,cAAC,EAAD,CACEY,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUL,SAAUqB,W,GArCVK,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f52df9c7.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./card.styles.css\";\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    {/* <img alt=\"contact\" src={`https://robohash.org/${props.contact.id}?set=set2&size=180x180`} /> */}\n    <h2> {props.contact.name}</h2>\n    <p>{props.contact.phone}</p>\n    <p>{props.contact.email}</p>\n  </div>\n);\n","import React from \"react\";\n\nimport { Card } from '../card/card.component';\n\nimport \"./card-list.styles.css\";\n\nexport const CardList = (props) => {\n  console.log(props);\n  return (\n    <div className=\"card-list\">\n      {props.contacts.map((contact) => (\n        <Card key={contact.id} contact={contact} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./search-bar.styles.css\";\n\nexport const SearchBar = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import { Component } from \"react\";\n\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBar } from \"./components/search-bar/search-bar.component\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      contacts: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ contacts: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { contacts, searchField } = this.state;\n    // destructuring in order to pull values and set to a const\n    // same as\n    // const contacts = this.state.contacts\n\n    const filteredContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n\n    return (\n      <div className='App'>\n        <h1 className='Title'>Contacts Rolodex</h1>\n        <SearchBar\n          placeholder=\"search contacts\"\n          handleChange={this.handleChange}\n        />\n        <CardList contacts={filteredContacts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// setState is an asynchronous function call\n// synchronous is an action that happens almost immediately (JS knows how long it will take)\n// asynchronous takes an indefinite amount of time, so the rest of the code will\n// run and then JavaScript will execute the asynchronous function\n\n// React has synthetic events - when a DOM event happens, react will intercept\n// onChange is an example of a synthetic event through react\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}